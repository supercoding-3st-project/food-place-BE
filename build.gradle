plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.github'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //lombok사용
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    //Mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    //Swagger
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    //env-hide
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    //mariadb
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.4'
    //JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    //javax.xml.bind.DatatypeConverter 에러나서 해야됨⬇️
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    //aws
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.3.1'
    //파일 이름 유틸
    implementation 'commons-io:commons-io:2.11.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootJar'){
    mainClass = 'com.github.foodplacebe.FoodPlaceBeApplication'
//    destinationDirectory = file("./buildtest")
//    archivesBaseName = '또간지도'
//    archiveFileName = 'testjar.jar'
//    archiveVersion = "0.0.3"
}
